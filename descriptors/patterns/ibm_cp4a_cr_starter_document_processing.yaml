###############################################################################
#
# Licensed Materials - Property of IBM
#
# (C) Copyright IBM Corp. 2021, 2023. All Rights Reserved.
#
# US Government Users Restricted Rights - Use, duplication or
# disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
#
###############################################################################
apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: icp4adeploy
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 23.0.2
spec:
  appVersion: 23.0.2

  ## MUST exist, used to accept ibm license, valid value only can be "accept"
  ibm_license: ""

  ## TIPS: The names of all variables in the spec field are converted to snake_case by the operator before running ansible
  ## For example, serviceAccount in the spec becomes service_account in ansible.
  ## It is recommended that you perform some type validation in Ansible on the variables to ensure that
  ## your application is receiving expected input.
  ## shared configuration among all tribe
  shared_configuration:

    ## FileNet Content Manager (FNCM) license and possible values are: user, non-production, and production.
    ## This value could be different from the rest of the licenses.
    sc_deployment_fncm_license: non-production

    ## CP4A patterns or capabilities to be deployed.  This CR represents the "Starter" deployment for the "document_processing" pattern (aka IBM Automation Document Processing).
    ## The "Starter" deployment will deploy a Development env for the "document_processing" pattern, which consist fo the following components:
    ##     - cds, cdra, cpds, viewone, Common Git Gateway (git-service and mongodb), cpe, navigator-sso, graphql;
    ##     - backend, rabbitmq;
    ##     - extraction ( ocr-extraction);
    ##     - processing (postprocessing, setup, classifyprocess-classify, processing-extraction);
    ##     - natural_language_extractor; deep learning;
    ##     - ums;
    ##     - bastudio, jms, solution-server-helmjob-db, solution-server, dba-etcd;
    sc_deployment_patterns: document_processing

    ## The optional components to be installed if listed here.  This is normally populated by the User script based on input from the user.
    ## The optional components are:
    ##   - document_processing_designer (indicates the deployment is a development environment)
    ##   - document_processing_runtime (indicates the deployment is a runtime environment)
    ##   - cmis, css, es, tm
    ## NOTE: es does not work when using Zen and IAM for authentication.
    sc_optional_components: document_processing_designer

    ## The deployment type as selected by the user.  Possible values are: Starter and Production.
    sc_deployment_type: Starter
    
    ## This is the deployment hostname suffix, this is optional and the default hostname suffix will be used as {meta.namespace}.router-canonicalhostname
    # sc_deployment_hostname_suffix: "{{ meta.name }}"
    
    ## Specify the RunAsUser for the security context of the pod.  This is usually a numeric value that corresponds to a user ID
    sc_run_as_user:

    ## This is the deployment platform supported for CP4A and the possible values are: ROKS, OCP, and other (which includes all Certified Kubernetes platforms)
    sc_deployment_platform:

    sc_egress_configuration:
      ## Required. Enable or disable egress access to external systems.
      ## If "sc_restricted_internet_access" is defined and has no value set, then default will be "true". 
      ## If "sc_restricted_internet_access" is not defined (e.g., in the case of upgrade, the existing CR will not have sc_restricted_internet_access), then "sc_restricted_internet_access" will be "false"
      sc_restricted_internet_access: true
      ## Optional.  Kubernetes API server namespace(s) (comma separated) to be used for egress network policy when `sc_restricted_internet_access: true` and `sc_deployment_platform: "other"`.
      ## "{}" can also be used as a value.  It is equivalent to all namespaces (eg: namespaceSelector:{})
      ## Default are "openshift-kube-apiserver", "openshift-apiserver" for OCP and ROKS.
      sc_api_namespace:
      ## Optional.  Kubernetes API server port(s) (comma separated) to be used for egress network policy when `sc_restricted_internet_access: true` and `sc_deployment_platform: "other"`. 
      ## Default are 443,6443 for OCP and ROKS
      sc_api_port:
      ## Optional.  Kubernetes DNS service namespace(s) (comma separated) to be used for egress network policy when `sc_restricted_internet_access: true` and `sc_deployment_platform: "other"`.
      ## "{}" can also be used as a value.  It is equivalent to all namespaces (eg: namespaceSelector:{})
      ## Default is "openshift-dns" for OCP and ROKS
      sc_dns_namespace:
      ## Optional.  Kubernetes DNS service port(s) (comma separated) to be used for egress network policy when `sc_restricted_internet_access: true` and `sc_deployment_platform: "other"`. 
      ## Default are 53,5353 for OCP and ROKS
      sc_dns_port:
    
    storage_configuration:
      sc_dynamic_storage_classname: ""
      sc_block_storage_classname: ""

  ############################################################
  ####   Document Processing Engine (DPE) configuration   ####
  ####      (formerly known as Content Analyzer)          ####
  ############################################################
  ca_configuration:
    ocrextraction:
      # When "deep_learning_object_detection" is set to true, deep_learning pod(s) will be deployed and be used for enhance object detection such as signatures, etc... Deep learning pods requires Nvidia GPU.
      # When not set, the default value is false.  Default will be false in Starter deployment
      deep_learning_object_detection:
        enabled: 
    # Deep Learning configuration. Only apply when ca_configuration.ocrextraction.deep_learning_object_detection.enabled is `true`.  Please refer to `ibm_cp4a_cr_production_FC_document_processing.yaml` for further detail.
    deeplearning:
      gpu_enabled:  # true or false.  Set it to true if you have a GPU enabled worker nodes
      nodelabel_key: # The unique node label key/value on the GPU node. For example: ibm-cloud.kubernetes.io/gpu-enabled:true.  Set this value when `gpu_enabled` is set to true. This must be a string value
      nodelabel_value:  # The node label value on the GPU node.  For example: "true". Set this value when `gpu_enabled` is set to true.  This must be a string value
